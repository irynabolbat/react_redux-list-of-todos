{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","api.ts","components/TodoList/TodoList.tsx","utils/filteredTodos.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","quary","todoStatus","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoList","dispatch","visibleTodos","normalizeQuary","toLowerCase","trim","title","includes","completed","filteredTodos","useEffect","todosActions","catch","error","Error","length","className","map","id","cn","onClick","currentTodoActions","setCurrentTodo","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","filterActions","placeholder","todoQuery","style","pointerEvents","Loader","TodoModal","closeTodo","useState","user","setUser","isLoading","setIsLoading","userId","finally","href","name","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd701af4.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype QuaryAction = {\n  type: 'filter/SET_QUARY';\n  payload: string;\n};\n\ntype ClearQuaryAction = {\n  type: 'filter/CLEAR_QUARY';\n};\n\ntype StatusAction = {\n  type: 'filter/SET_STATUS';\n  payload: Status;\n};\n\nconst query = (quary: string): QuaryAction => ({\n  type: 'filter/SET_QUARY',\n  payload: quary,\n});\n\nconst clearQuary = (): ClearQuaryAction => ({\n  type: 'filter/CLEAR_QUARY',\n});\n\nconst status = (todoStatus: Status): StatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: todoStatus,\n});\n\ntype State = {\n  query: string, status: Status\n};\n\nconst initialState: State = { query: '', status: 'all' };\n\ntype Action = QuaryAction | StatusAction | ClearQuaryAction;\n\nexport const actions = { query, clearQuary, status };\n\nconst filterReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/SET_QUARY':\n      return { ...state, query: action.payload };\n\n    case 'filter/CLEAR_QUARY':\n      return { ...state, query: '' };\n\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodoAction = {\n  type: 'currentTodos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodoAction => ({\n  type: 'currentTodos/SET',\n  payload: todos,\n});\n\ntype Action = SetTodoAction;\n\nconst initialState = {\n  todos: [] as Todo[],\n};\n\nexport const actions = { setTodos };\n\nconst todosReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'currentTodos/SET': {\n      return { ...state, todos: action.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as todosActions } from '../../features/todos';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { filteredTodos } from '../../utils/filteredTodos';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const visibleTodos = filteredTodos(todos.todos, query, status);\n\n  useEffect(() => {\n    getTodos()\n      .then(res => (dispatch(todosActions.setTodos(res))))\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  const setCurrentTodo = (todo: Todo) => {\n    return dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {visibleTodos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        ) : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {visibleTodos.map((todo: Todo) => (\n                <tr data-cy=\"todo\" key={todo.id}>\n                  <td className=\"is-vcentered\">{todo.id}</td>\n\n                  {todo.completed\n                    ? (\n                      <td className=\"is-vcentered\">\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      </td>\n                    ) : <td className=\"is-vcentered\"> </td>}\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={cn({\n                        'has-text-danger': !todo.completed,\n                        'has-text-success': todo.completed,\n                      })}\n                    >\n                      {todo.title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => setCurrentTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={cn('far', {\n                          'fa-eye': todo.id !== currentTodo?.id,\n                          'fa-eye-slash': todo.id === currentTodo?.id,\n                        })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport function filteredTodos(todos: Todo[], query: string, status: Status) {\n  let visibleTodos = [...todos];\n\n  if (query) {\n    const normalizeQuary = query.toLowerCase().trim();\n\n    visibleTodos = visibleTodos.filter((todo) => todo.title.trim().toLowerCase().includes(normalizeQuary));\n  }\n\n  if (status) {\n    visibleTodos = visibleTodos.filter((todo) => {\n      switch (status) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return visibleTodos;\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleChangeQuery = (todoQuery: string) => {\n    return dispatch(filterActions.query(todoQuery));\n  };\n\n  const handleChangeStatus = (todoStatus: Status) => {\n    return dispatch(filterActions.status(todoStatus));\n  };\n\n  const clearQuery = () => {\n    return dispatch(filterActions.clearQuary());\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => handleChangeStatus(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  closeTodo: () => void;\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ closeTodo, todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(res => (setUser(res)))\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={closeTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n                <a href=\"mailto:Sincere@april.biz\">{user?.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { actions as currentTodoActions } from './features/currentTodo';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(res => dispatch(todosActions.setTodos(res)))\n      .catch(error => {\n        throw new Error(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleClose = () => {\n    return dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {isLoading\n              ? <Loader />\n              : (\n                <>\n                  <h1 className=\"title\">Todos:</h1>\n\n                  <div className=\"block\">\n                    <TodoFilter />\n                  </div>\n\n                  <div className=\"block\">\n                    <TodoList />\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          closeTodo={handleClose}\n          todo={currentTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}